requisições com Axios

GET /clientes

import axios from "axios";

const buscarClientes = async () => {
  try {
    const response = await axios.get("http://localhost:8080/clientes");
    console.log("Clientes:", response.data);
  } catch (error) {
    if (error.response) {
      console.error("Erro na resposta:", error.response.data);
    } else {
      console.error("Erro:", error.message);
    }
  }
};

buscarClientes();

GET /clientes/{id}

import axios from "axios";

const buscarClientePorId = async (id) => {
  try {
    const response = await axios.get(`http://localhost:8080/clientes/${id}`);
    console.log("Cliente encontrado:", response.data);
  } catch (error) {
    if (error.response) {
      console.error("Erro na resposta:", error.response.data);
    } else {
      console.error("Erro:", error.message);
    }
  }
};

buscarClientePorId(1); // substitua pelo ID desejado

POST /clientes

import axios from "axios";

axios.post("http://localhost:8080/clientes", {
  nome: "Rafael Mota",
  email: "rafael.mota@example.com",
  senhaHash: "minhasenha123",
  status: "ativo"
})
  .then(response => {
    console.log("Cliente criado com sucesso:", response.data);
  })
  .catch(error => {
    if (error.response) {
      console.error("Erro do servidor:", error.response.data);
    } else {
      console.error("Erro na requisição:", error.message);
    }
  });

PUT /clientes/{id}

import axios from "axios";

const atualizarCliente = async () => {
  const clienteId = 1; // ID do cliente que você quer atualizar
  const dadosAtualizados = {
    nome: "Rafael Mota Atualizado",
    email: "rafael.mota.novo@example.com",
    senhaHash: "novaSenha123",
    status: "bloqueado" // ou "ativo"
  };

  try {
    const response = await axios.put(
      `http://localhost:8080/clientes/${clienteId}`,
      dadosAtualizados,
      {
        headers: {
          "Content-Type": "application/json"
        }
      }
    );

    console.log("Cliente atualizado:", response.data);
  } catch (error) {
    if (error.response) {
      console.error("Erro na resposta:", error.response.data);
    } else {
      console.error("Erro:", error.message);
    }
  }
};

atualizarCliente();

DELETE /clientes/{id}

import axios from "axios";

const deletarCliente = async (id) => {
  try {
    const response = await axios.delete(`http://localhost:8080/clientes/${id}`);
    console.log(`Cliente ${id} deletado com sucesso!`);
    console.log("Resposta do servidor:", response.data);
  } catch (error) {
    if (error.response) {
      console.error("Erro na resposta:", error.response.data);
    } else {
      console.error("Erro:", error.message);
    }
  }
};

// Exemplo de uso
deletarCliente(1); // substitua pelo ID do cliente que quer deletar

============================================

GET livros

import axios from 'axios';

// Endpoint base da sua API
const baseURL = 'http://localhost:8080/livros';

// Função para buscar todos os livros
async function getLivros() {
  try {
    const response = await axios.get(baseURL);
    console.log('Lista de livros:', response.data);
  } catch (error) {
    console.error('Erro ao buscar livros:', error.response ? error.response.data : error.message);
  }
}

// Chamar a função
getLivros();

POST livros

import axios from "axios";

const criarLivro = async () => {
  const novoLivro = {
    titulo: "Dom Casmurro",
    anoPublicacao: 1899,
    qntTotal: 5,
    qntDisponivel: 5
  };

  try {
    const response = await axios.post("http://localhost:8080/livros", novoLivro);
    console.log("Livro criado com sucesso:", response.data);
  } catch (error) {
    if (error.response) {
      console.error("Erro na resposta:", error.response.data);
    } else {
      console.error("Erro:", error.message);
    }
  }
};

criarLivro();

PUT livros/{id}

import axios from "axios";

const atualizarLivro = async (id) => {
  const livroAtualizado = {
    titulo: "Dom Casmurro - Edição Atualizada",
    anoPublicacao: 1900,
    qntTotal: 5,
    qntDisponivel: 3
  };

  try {
    const response = await axios.put(`http://localhost:8080/livros/${id}`, livroAtualizado);
    console.log("Livro atualizado com sucesso:", response.data);
  } catch (error) {
    if (error.response) {
      console.error("Erro na resposta:", error.response.data);
    } else {
      console.error("Erro:", error.message);
    }
  }
};

// Exemplo de uso: atualizar livro com ID 1
atualizarLivro(1);

DELETE livros/{id}

import axios from "axios";

const deletarLivro = async (id) => {
  try {
    await axios.delete(`http://localhost:8080/livros/${id}`);
    console.log(`Livro de ID ${id} deletado com sucesso.`);
  } catch (error) {
    if (error.response) {
      console.error("Erro na resposta:", error.response.data);
    } else {
      console.error("Erro:", error.message);
    }
  }
};

// Exemplo de uso: deletar livro com ID 1
deletarLivro(1);

=======================================

GET funcionarios

import axios from "axios";

async function getFuncionarios() {
  try {
    const response = await axios.get("http://localhost:8080/funcionarios");
    console.log("Funcionários:", response.data);
  } catch (error) {
    console.error("Erro ao buscar funcionários:", error);
  }
}

getFuncionarios();

POST funcionarios

import axios from "axios";

async function criarFuncionario() {
  const novoFuncionario = {
    nome: "Maria Oliveira",
    login: "maria.oliveira",
    senhaHash: "senhaSegura123"
  };

  try {
    const response = await axios.post("http://localhost:8080/funcionarios", novoFuncionario);
    console.log("Funcionário criado:", response.data);
  } catch (error) {
    console.error("Erro ao criar funcionário:", error.response?.data || error.message);
  }
}

criarFuncionario();

PUT funcionarios/{id}

import axios from "axios";

const id = 1; // ID do funcionário que você quer atualizar

const funcionarioAtualizado = {
  nome: "João Silva Atualizado",
  login: "joaosilva",
  senhaHash: "novaSenhaSegura123"
};

axios.put(`http://localhost:8080/funcionarios/${id}`, funcionarioAtualizado)
  .then(response => {
    console.log("Funcionário atualizado com sucesso:", response.data);
  })
  .catch(error => {
    console.error("Erro ao atualizar funcionário:", error.response?.data || error.message);
  });

DELETE funcionarios/{id}

import axios from "axios";

const id = 3; // ID do funcionário que deseja excluir

axios.delete(`http://localhost:8080/funcionarios/${id}`)
  .then(() => {
    console.log("Funcionário deletado com sucesso!");
  })
  .catch(error => {
    console.error("Erro ao deletar funcionário:", error.response?.data || error.message);
  });

POST funcionarios/login

import axios from "axios";

async function fazerLogin() {
  const credenciais = {
    login: "admin",
    senha: "1234"
  };

  try {
    const response = await axios.post("http://localhost:8080/login", credenciais);
    console.log("Resposta do servidor:", response.data);

    if (response.data.status === "sucesso") {
      alert("Login realizado com sucesso!");
    } else {
      alert("Erro: " + response.data.mensagem);
    }
  } catch (error) {
    console.error("Erro na requisição:", error.response?.data || error.message);
  }
}

fazerLogin();

POST funcionarios/logout

axios.post('http://localhost:8080/login/logout')
  .then(response => {
    console.log(response.data) // "Logout realizado com sucesso."
    alert("Logout realizado com sucesso!")
  })
  .catch(error => {
    console.error("Erro ao realizar logout:", error)
  })

GET funcionarios/autenticado

axios.get('http://localhost:8080/login/autenticado')
  .then(response => {
    const funcionario = response.data
    console.log("Funcionário autenticado:", funcionario)
    alert(`Funcionário autenticado: ${funcionario.nome}`)
  })
  .catch(error => {
    if (error.response && error.response.status === 401) {
      console.warn("Nenhum funcionário autenticado.")
      alert("Nenhum funcionário autenticado.")
    } else {
      console.error("Erro ao verificar autenticação:", error)
    }
})

======================================

GET emprestimos

axios.get('http://localhost:8080/emprestimos')
  .then(response => {
    console.log("Lista de empréstimos:", response.data)
    // Exemplo: renderizar na tela
    response.data.forEach(emp => {
      console.log(`Cliente: ${emp.cliente.nome} | Livro: ${emp.livro.titulo}`)
    })
  })
  .catch(error => {
    console.error("Erro ao buscar empréstimos:", error)
  })

POST emprestimos

  axios.post('http://localhost:8080/emprestimos', {
    cliente: { id: 1 }, // ID do cliente existente no banco
    livro: { id: 5 }    // ID do livro existente no banco
  })
  .then(response => {
    console.log("Empréstimo criado:", response.data)
    alert("Empréstimo realizado com sucesso!")
  })
  .catch(error => {
    if (error.response) {
      console.error("Erro:", error.response.data)
      alert(`Erro ao criar empréstimo: ${error.response.data.message || error.response.data}`)
    } else {
      console.error("Erro inesperado:", error)
    }
  })

PUT emprestimos

import axios from "axios";

const atualizarEmprestimo = async (id, emprestimoAtualizado) => {
  try {
    const response = await axios.put(
      `http://localhost:8080/emprestimos/${id}`,
      emprestimoAtualizado
    );
    console.log("Empréstimo atualizado:", response.data);
  } catch (error) {
    console.error("Erro ao atualizar empréstimo:", error.response?.data || error);
  }
};

// Exemplo:
atualizarEmprestimo(2, {
  cliente: { id: 1 },
  livro: { id: 3 },
  dataRetirada: "2025-10-11",
  dataRetornoPrevisto: "2025-10-18",
  dataRetornoOficial: null
});

DELETE emprestimos

import axios from "axios";

const deletarEmprestimo = async (id) => {
  try {
    await axios.delete(`http://localhost:8080/emprestimos/${id}`);
    console.log("Empréstimo deletado com sucesso!");
  } catch (error) {
    console.error("Erro ao deletar empréstimo:", error.response?.data || error);
  }
};

// Exemplo:
deletarEmprestimo(5);

PATCH emprestimos/{id}/devolucao

import axios from "axios";

const registrarDevolucao = async (id) => {
  try {
    const response = await axios.patch(`http://localhost:8080/emprestimos/${id}/devolucao`);
    console.log("Devolução registrada:", response.data);
  } catch (error) {
    console.error("Erro ao registrar devolução:", error.response?.data || error);
  }
};

// Exemplo de uso:
registrarDevolucao(2);

PATCH emprestimos/{id}/renovacao

import axios from "axios";

const renovarEmprestimo = async (id) => {
  try {
    const response = await axios.patch(`http://localhost:8080/emprestimos/${id}/renovacao`);
    console.log("Empréstimo renovado:", response.data);
  } catch (error) {
    console.error("Erro ao renovar empréstimo:", error.response?.data || error);
  }
};

// Exemplo de uso:
renovarEmprestimo(2);

